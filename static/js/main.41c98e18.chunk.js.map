{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","edit","value","Input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","className","onSubmit","preventDefault","id","Math","floor","random","text","type","placeholder","name","onChange","ref","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","map","todo","index","isComplete","key","onClick","TodoList","setTodos","test","newTodos","updateTodos","removeArr","filter","todoId","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAwCeA,MAtCf,SAAkBC,GAAQ,IAAD,EACKC,mBAASD,EAAME,KAAOF,EAAME,KAAKC,MAAQ,IAD9C,mBACdC,EADc,KACPC,EADO,KAEfC,EAAWC,iBAAO,MAExBC,qBAAU,WACNF,EAASG,QAAQC,WAGrB,IAUMC,EAAe,SAAAC,GACjBP,EAASO,EAAEC,OAAOV,QAEtB,OACQ,0BAAMW,UAAU,YAAYC,SAdf,SAAAH,GACjBA,EAAEI,iBAEFhB,EAAMe,SAAS,CACXE,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBC,KAAMjB,IAEVC,EAAS,MAQAL,EAAME,KACH,oCACA,2BAAOoB,KAAK,OAAOC,YAAY,mCAAmCpB,MAAOC,EAAOoB,KAAK,OAAOV,UAAU,aAAaW,SAAUd,EAAce,IAAKpB,IAChJ,4BAAQQ,UAAU,eAAlB,SAGA,oCACI,2BAAOQ,KAAK,OAAOC,YAAY,wCAAwCpB,MAAOC,EAAOoB,KAAK,OAAOV,UAAU,aAAaW,SAAUd,EAAce,IAAKpB,IACrJ,4BAAQQ,UAAU,eAAlB,a,qBCUTa,MApCf,YAAgE,IAAhDC,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,WAAc,EACnC9B,mBAAS,CAC7BgB,GAAI,KACJd,MAAO,KAHgD,mBACpDD,EADoD,KAC9C8B,EAD8C,KAc3D,OAAG9B,EAAKe,GACG,kBAAC,EAAD,CAAUf,KAAMA,EAAMa,SATZ,SAAAZ,GACjB4B,EAAW7B,EAAKe,GAAId,GACpB6B,EAAQ,CACJf,GAAI,KACJd,MAAO,QAQRyB,EAAMK,KAAI,SAACC,EAAMC,GAAP,OACb,yBACIrB,UAAWoB,EAAKE,WAAa,oBAAsB,WACnDC,IAAKF,GACL,yBAAKE,IAAKH,EAAKjB,GAAIqB,QAAS,kBAAMT,EAAaK,EAAKjB,MAC/CiB,EAAKb,MAEV,yBAAKP,UAAU,SACX,kBAAC,IAAD,CAAmBwB,QAAS,kBAAMR,EAAWI,EAAKjB,KAAKH,UAAU,gBACjE,kBAAC,IAAD,CAAQwB,QAAS,kBAAMN,EAAQ,CAC3Bf,GAAIiB,EAAKjB,GACTd,MAAO+B,EAAKb,QACZP,UAAU,oBCgBfyB,MAjDf,WAAqB,IAAD,EAEUtC,mBAAS,IAFnB,mBAET2B,EAFS,KAEFY,EAFE,KAoChB,OACI,6BACI,wBAAI1B,UAAU,SAAd,+BACA,kBAAC,EAAD,CAAUC,SAnCF,SAAAmB,GACZ,GAAKA,EAAKb,OAAQ,QAAQoB,KAAKP,EAAKb,MAApC,CAIA,IAAMqB,EAAQ,CAAIR,GAAJ,mBAAaN,IAC3BY,EAASE,OA8BL,kBAAC,EAAD,CAAMd,MAAOA,EACTC,aAfS,SAAAZ,GACjB,IAAI0B,EAAcf,EAAMK,KAAI,SAAAC,GAIxB,OAHIA,EAAKjB,KAAOA,IACZiB,EAAKE,YAAcF,EAAKE,YAErBF,KAEXM,EAASG,IASDb,WA7BO,SAAAb,GACf,IAAM2B,EAAY,YAAIhB,GAAOiB,QAAO,SAAAX,GAAI,OAAIA,EAAKjB,KAAOA,KAExDuB,EAASI,IA2BDb,WAxBO,SAACe,EAAQC,GACnBA,EAAS1B,OAAQ,QAAQoB,KAAKM,EAAS1B,OAG5CmB,GAAS,SAAAQ,GAAI,OAAIA,EAAKf,KAAI,SAAAgB,GAAI,OAAKA,EAAKhC,KAAO6B,EAASC,EAAWE,aCX5DC,MATf,WACE,OACE,yBAAKpC,UAAU,YAEb,kBAAC,EAAD,QCPNqC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.41c98e18.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\n\r\nfunction TodoForm(props) {\r\n    const [Input, setInput] = useState(props.edit ? props.edit.value : '');\r\n    const inputRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        inputRef.current.focus()\r\n    })\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        props.onSubmit({\r\n            id: Math.floor(Math.random() * 10000),\r\n            text: Input\r\n        })\r\n        setInput('');\r\n    };\r\n\r\n    const handleChange = e => {\r\n        setInput(e.target.value);\r\n    }\r\n    return (\r\n            <form className=\"todo-form\" onSubmit={handleSubmit}>\r\n                {props.edit ? (\r\n                    <>\r\n                    <input type=\"text\" placeholder=\"Edit Rencana Kegiatanmu Hari Ini\" value={Input} name=\"text\" className=\"todo-input\" onChange={handleChange} ref={inputRef} />\r\n                    <button className=\"todo-button\">Edit</button>\r\n                    </>\r\n                    ) : (\r\n                    <>\r\n                        <input type=\"text\" placeholder=\"Tambahkan Rencana Kegiatanmu Hari Ini\" value={Input} name=\"text\" className=\"todo-input\" onChange={handleChange} ref={inputRef} />\r\n                        <button className=\"todo-button\">Tambah</button>\r\n                    </>\r\n                )}\r\n            </form>\r\n    )\r\n}\r\n\r\nexport default TodoForm\r\n","import React, { useState } from 'react';\r\nimport TodoForm from './TodoForm'\r\nimport { RiCloseCircleLine } from \"react-icons/ri\";\r\nimport { TiEdit } from \"react-icons/ti\";\r\n\r\n\r\n\r\nfunction Todo({ todos, completeTodo, removeTodo, updateTodo }) {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: ''\r\n    });\r\n\r\n    const submitUpdate = value => {\r\n        updateTodo(edit.id, value)\r\n        setEdit({\r\n            id: null,\r\n            value: ''\r\n        })\r\n    }\r\n\r\n    if(edit.id){\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate} />\r\n    }\r\n\r\n    return todos.map((todo, index) => (\r\n        <div\r\n            className={todo.isComplete ? 'todo-row complete' : 'todo-row'}\r\n            key={index}>\r\n            <div key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n                {todo.text}\r\n            </div>\r\n            <div className='icons'>\r\n                <RiCloseCircleLine onClick={() => removeTodo(todo.id)} className='delete-icon' />\r\n                <TiEdit onClick={() => setEdit({\r\n                    id: todo.id,\r\n                    value: todo.text\r\n                })} className='edit-icon' />\r\n            </div>\r\n        </div>\r\n    ));\r\n};\r\n\r\nexport default Todo\r\n","import React, { useState } from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport Todo from './Todo';\r\n\r\nfunction TodoList() {\r\n\r\n    const [todos, setTodos] = useState([]);\r\n\r\n    const addTodo = todo => {\r\n        if (!todo.text || /^\\s*$/.test(todo.text)) {\r\n            return\r\n        }\r\n\r\n        const newTodos = [todo, ...todos];\r\n        setTodos(newTodos);\r\n    };\r\n\r\n    const removeTodo = id => {\r\n        const removeArr = [...todos].filter(todo => todo.id !== id)\r\n\r\n        setTodos(removeArr);\r\n    }\r\n\r\n    const updateTodo = (todoId, newValue) => {\r\n        if (!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n            return\r\n        }\r\n        setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)))\r\n    }\r\n\r\n    const completeTodo = id => {\r\n        let updateTodos = todos.map(todo => {\r\n            if (todo.id === id) {\r\n                todo.isComplete = !todo.isComplete\r\n            }\r\n            return todo\r\n        })\r\n        setTodos(updateTodos);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1 className=\"judul\" > Apa Kegiatanmu Hari Ini ? </h1>\r\n            <TodoForm onSubmit={addTodo} />\r\n            <Todo todos={todos}\r\n                completeTodo={completeTodo}\r\n                removeTodo={removeTodo}\r\n                updateTodo={updateTodo}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList","import React from 'react';\nimport './App.css';\nimport TodoForm from './components/TodoForm';\nimport TodoList from './components/TodoList';\nimport Todo from './components/Todo';\n\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n      {/* <Todo /> */}\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}